rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    /* ==== Helper Functions ==== */
    function signedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return signedIn() &&
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function validImageType() {
      return request.resource.contentType.matches('image/(jpeg|jpg|png|gif|webp|heic|heif)');
    }

    function validMediaType() {
      return request.resource.contentType.matches('image/(jpeg|jpg|png|gif|webp|heic|heif)');
    }

    function validDocumentType() {
      return request.resource.contentType.matches('(image|video|audio|text|application)/(.*)|.*');
    }

    /* ==== Profile Photos (Primary path) ==== */
    match /profilePhotos/{userId}/{allPaths=**} {
      allow read: if true; // ðŸ”¥ public read
      allow write: if signedIn() &&
        request.auth.uid == userId &&
        request.resource.size <= 10 * 1024 * 1024 &&
        validImageType();
      allow delete: if signedIn() && request.auth.uid == userId;
    }

    /* ==== User Images (extra gallery photos) ==== */
    match /images/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.auth.uid == userId &&
        request.resource.size <= 10 * 1024 * 1024 &&
        validMediaType();
      allow delete: if signedIn() && request.auth.uid == userId;
    }

    /* ==== Avatars (legacy) ==== */
    match /avatars/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.auth.uid == userId &&
        request.resource.size <= 10 * 1024 * 1024 &&
        validMediaType();
      allow delete: if signedIn() && request.auth.uid == userId;
    }

    /* ==== Public Content ==== */
    match /world_feed/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.resource.size <= 10 * 1024 * 1024 &&
        validMediaType();
    }

    match /casualties/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.resource.size <= 10 * 1024 * 1024 &&
        validMediaType();
    }

    match /live_streams/{streamerUid}/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.auth.uid == streamerUid &&
        request.resource.size <= 50 * 1024 * 1024 &&
        validMediaType();
    }

    match /spotlight/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.resource.size <= 10 * 1024 * 1024 &&
        validImageType();
    }

    /* ==== Lounge / Districts ==== */
    match /lounge_media/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.auth.uid == userId &&
        request.resource.size <= 5 * 1024 * 1024 &&
        validImageType();
    }

    match /districts/{district}/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.resource.size <= 10 * 1024 * 1024 &&
        validMediaType();
    }

    match /anonymous/{allPaths=**} {
      allow read: if true;
      allow write: if signedIn() &&
        request.resource.size <= 5 * 1024 * 1024 &&
        validImageType();
    }

    /* ==== Other ==== */
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if signedIn() &&
        request.auth.uid == userId &&
        request.resource.size <= 50 * 1024 * 1024 &&
        validDocumentType();
    }

    match /cache/{allPaths=**} {
      allow read: if true;
      allow write: if false;
    }

    /* ==== Default Fallback ==== */
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
